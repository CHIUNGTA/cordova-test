{"version":3,"file":"js/693.dc3cdd80.js","mappings":"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","sources":["webpack://my-project/./src/views/SettingView.vue","webpack://my-project/./src/views/SettingView.vue?d08e"],"sourcesContent":["<template>\n  <div>\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\">\n    <p>測試頁面</p>\n    <van-row justify=\"center\">\n      <van-col>\n    <p>{{ contents }}</p>\n    <input v-model=\"encryptConfig.password\" placeholder=\"密碼\">\n    <p>加密後的token:{{token||'無'}}</p>\n      </van-col>\n    </van-row>\n    <p>解密後的token:{{password}}</p>\n    <van-button type=\"success\" @click=\"clickEvent\">主要按鈕</van-button>\n    <van-button type=\"success\" @click=\"openFingerPrint\">開啟指紋辨識</van-button><br>\n    <van-button type=\"danger\" @click=\"加密\">加密測試</van-button>\n    <van-button type=\"success\" @click=\"解密\">解密測試</van-button>\n    <!-- <van-datetime-picker v-model=\"currentDate\" type=\"date\" title=\"選擇年月日\" :min-date=\"minDate\"\n      :max-date=\"maxDate\" /> -->\n  </div>\n\n\n</template>\n\n<script>\n  import logService from '../services/log-service'\n  export default {\n    name: 'TestView',\n    components: {},\n    data() {\n      return {\n        contents: '這是一個基本的網站架構',\n        currentDate: '',\n        minDate: new Date(2019, 0, 1),\n        maxDate: new Date(2025, 0, 1),\n        encryptConfig: {\n          clientId: \"1234567\",\n          username: \"test-app\",\n          locale: 'zh_TW',\n          password: \"I'amPassword\",\n          userAuthRequired: true\n        },\n        token: '',\n        password: ''\n      }\n    },\n    methods: {\n      clickEvent() {\n        this.$dialog.alert({\n          message: '你好世界',\n          confirmButtonColor: '#65db03',\n        });\n      },\n\n      解密() {\n        try {\n          var thisVue = this\n          logService.remoteLog('開始解密')\n          var decryptConfig = {\n            clientId: this.encryptConfig.clientId,\n            username: this.encryptConfig.username,\n            locale: 'zh_TW',\n            token: this.token\n          };\n          logService.remoteLog(decryptConfig)\n          FingerprintAuth.decrypt(decryptConfig, successCallback, errorCallback);\n\n          function successCallback(result) {\n            console.log(\"successCallback(): \" + JSON.stringify(result));\n            logService.remoteLog('successCallback 解密', result)\n            thisVue.password = result.password\n            if (result.withFingerprint) {\n              logService.remoteLog('成功手指解密')\n              console.log(\"Successful biometric authentication.\");\n              if (result.password) {\n                console.log(\"Successfully decrypted credential token.\");\n                console.log(\"password: \" + result.password);\n              }\n            } else if (result.withBackup) {\n              logService.remoteLog('備案解密', result)\n              console.log(\"Authenticated with backup password\");\n            }\n          }\n\n          function errorCallback(error) {\n            logService.remoteLog('解密失敗', error)\n            if (error === FingerprintAuth.ERRORS.FINGERPRINT_CANCELLED) {\n              console.log(\"FingerprintAuth Dialog Cancelled!\");\n            } else {\n              console.log(\"FingerprintAuth Error: \" + error);\n            }\n          }\n        } catch (err) {\n          logService.remoteLog('解密catch ', err)\n        }\n\n\n      },\n      加密() {\n        var thisVue = this\n        logService.remoteLog('加密')\n        function successCallback(result) {\n          console.log(\"successCallback(): \" + JSON.stringify(result));\n          logService.remoteLog(`加密成功`)\n          if (result.withFingerprint) {\n            console.log(\"Successfully encrypted credentials.\");\n            console.log(\"Encrypted credentials: \" + result.token);\n            logService.remoteLog('withFingerprint', result)\n            thisVue.token = result.token\n          } else if (result.withBackup) {\n            console.log(\"Authenticated with backup password\");\n            logService.remoteLog('Authenticated with backup password', result)\n          }\n        }\n\n        function errorCallback(error) {\n          if (error === FingerprintAuth.ERRORS.FINGERPRINT_CANCELLED) {\n            alert(\"e1\");\n            console.log(\"FingerprintAuth Dialog Cancelled!\");\n            logService('FingerprintAuth Dialog Cancelled!', error)\n          } else {\n            alert(\"e2\");\n            console.log(\"FingerprintAuth Error: \" + error);\n            logService.remoteLog('FingerprintAuth Error: ', error)\n          }\n        }\n        FingerprintAuth.encrypt(this.encryptConfig, successCallback, errorCallback);\n      },\n      openFingerPrint() {\n        logService.remoteLog('openFingerPrint click')\n\n      }\n    }\n  };\n\n</script>\n","import { render } from \"./SettingView.vue?vue&type=template&id=53f8f552\"\nimport script from \"./SettingView.vue?vue&type=script&lang=js\"\nexport * from \"./SettingView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/fcu/Documents/測試用/test-app/my-project/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","alt","src","_imports_0","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_van_row","justify","_component_van_col","_toDisplayString","$data","password","$event","placeholder","_component_van_button","type","onClick","$options","_hoisted_5","name","components","data","contents","currentDate","minDate","Date","maxDate","encryptConfig","clientId","username","locale","userAuthRequired","token","methods","clickEvent","this","$dialog","alert","message","confirmButtonColor","解密","thisVue","logService","decryptConfig","successCallback","result","console","log","JSON","stringify","withFingerprint","withBackup","errorCallback","error","FingerprintAuth","ERRORS","FINGERPRINT_CANCELLED","decrypt","err","加密","encrypt","openFingerPrint","__exports__","render"],"sourceRoot":""}